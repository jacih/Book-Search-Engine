{"ast":null,"code":"import _asyncToGenerator from\"/Users/jacquelinehodgson/Desktop/UTorCoding/Homework/Book-Search-Engine/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/jacquelinehodgson/Desktop/UTorCoding/Homework/Book-Search-Engine/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/jacquelinehodgson/Desktop/UTorCoding/Homework/Book-Search-Engine/client/node_modules/@babel/runtime/regenerator/index.js\";import React from'react';import{Jumbotron,Container,CardColumns,Card,Button}from'react-bootstrap';import{useQuery,useMutation}from'@apollo/react-hooks';import Auth from'../utils/auth';import{removeBookId,saveBookIds}from'../utils/localStorage';import{GET_ME}from'../utils/queries';import{DELETE_BOOK}from'../utils/mutations';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var SavedBooks=function SavedBooks(){var _useQuery=useQuery(GET_ME),loading=_useQuery.loading,data=_useQuery.data;var userData=(data===null||data===void 0?void 0:data.me)||[];var _useMutation=useMutation(DELETE_BOOK),_useMutation2=_slicedToArray(_useMutation,2),deleteBook=_useMutation2[0],error=_useMutation2[1].error;// use this to determine if `useEffect()` hook needs to run again\nvar userDataLength=Object.keys(userData).length;// create function that accepts the book's mongo _id value as param and deletes the book from the database\nvar handleDeleteBook=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(bookId){var token,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:token=Auth.loggedIn()?Auth.getToken():null;if(token){_context.next=3;break;}return _context.abrupt(\"return\",false);case 3:_context.prev=3;_context.next=6;return deleteBook({variables:{bookId:bookId}});case 6:response=_context.sent;if(response){_context.next=9;break;}throw new Error('something went wrong!');case 9:// upon success, remove book's id from localStorage\nremoveBookId(bookId);_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](3);console.error(_context.t0);case 15:case\"end\":return _context.stop();}}},_callee,null,[[3,12]]);}));return function handleDeleteBook(_x){return _ref.apply(this,arguments);};}();// if data isn't here yet, say so\nif(!userDataLength){return/*#__PURE__*/_jsx(\"h2\",{children:\"LOADING...\"});}var savedBookIds=userData.savedBooks.map(function(book){return book.bookId;});saveBookIds(savedBookIds);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Jumbotron,{fluid:true,className:\"text-light bg-dark\",children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(\"h1\",{children:\"Viewing saved books!\"})})}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h2\",{children:userData.savedBooks.length?\"Viewing \".concat(userData.savedBooks.length,\" saved \").concat(userData.savedBooks.length===1?'book':'books',\":\"):'You have no saved books!'}),/*#__PURE__*/_jsx(CardColumns,{children:userData.savedBooks.map(function(book){return/*#__PURE__*/_jsxs(Card,{border:\"dark\",children:[book.image?/*#__PURE__*/_jsx(Card.Img,{src:book.image,alt:\"The cover for \".concat(book.title),variant:\"top\"}):null,/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{children:book.title}),/*#__PURE__*/_jsxs(\"p\",{className:\"small\",children:[\"Authors: \",book.authors]}),/*#__PURE__*/_jsx(Card.Text,{children:book.description}),/*#__PURE__*/_jsx(Button,{className:\"btn-block btn-danger\",onClick:function onClick(){return handleDeleteBook(book.bookId);},children:\"Delete this Book!\"})]})]},book.bookId);})})]})]});};export default SavedBooks;","map":{"version":3,"sources":["/Users/jacquelinehodgson/Desktop/UTorCoding/Homework/Book-Search-Engine/client/src/pages/SavedBooks.js"],"names":["React","Jumbotron","Container","CardColumns","Card","Button","useQuery","useMutation","Auth","removeBookId","saveBookIds","GET_ME","DELETE_BOOK","SavedBooks","loading","data","userData","me","deleteBook","error","userDataLength","Object","keys","length","handleDeleteBook","bookId","token","loggedIn","getToken","variables","response","Error","console","savedBookIds","savedBooks","map","book","image","title","authors","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\n\nimport Auth from '../utils/auth';\nimport { removeBookId, saveBookIds } from '../utils/localStorage';\nimport { GET_ME } from '../utils/queries';\nimport { DELETE_BOOK } from '../utils/mutations';\n\nconst SavedBooks = () => {\n  const { loading, data } = useQuery(GET_ME);\n  const userData = data?.me || [];\n\n  const [deleteBook, { error }] = useMutation(DELETE_BOOK);\n\n  // use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await deleteBook({\n        variables: { bookId: bookId }\n      });\n\n      if (!response) {\n        throw new Error('something went wrong!');\n      }\n\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return <h2>LOADING...</h2>;\n  }\n\n  const savedBookIds = userData.savedBooks.map((book) => book.bookId);\n  saveBookIds(savedBookIds);\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n"]},"metadata":{},"sourceType":"module"}